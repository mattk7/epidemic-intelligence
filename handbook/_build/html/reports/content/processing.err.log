Traceback (most recent call last):
  File "C:\Users\elija\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\jupyter_cache\executors\utils.py", line 58, in single_nb_execution
    executenb(
  File "C:\Users\elija\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\nbclient\client.py", line 1314, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\elija\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\jupyter_core\utils\__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.11_3.11.2544.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 654, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "C:\Users\elija\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\nbclient\client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "C:\Users\elija\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\nbclient\client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "C:\Users\elija\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\nbclient\client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
table_name='h1n1_R2.basins_prevalence'
destination='h1n1_R2.basins_prevalence_agg'
geo_column='basin_id'
value_columns={'Infectious_18_23': ['Infectious_SympT_18_23', 'Infectious_Asymp_18_23'], 'Susceptible_18_23': ['Susceptible_18_23']}
date='iso'

ei.aggregate_sir(
    client=client, 
    table_name=table_name,
    destination=destination,
    geo_column=geo_column, 
    value_columns={'Infectious_SympT_18_23': 'Infectious_18_23', 
                   'Infectious_Asymp_18_23': 'Infectious_18_23', 
                   'Susceptible_18_23': 'Susceptible_18_23'},
    date='iso'
)
------------------


[1;31m---------------------------------------------------------------------------[0m
[1;31mBadRequest[0m                                Traceback (most recent call last)
Cell [1;32mIn[3], line 7[0m
[0;32m      4[0m value_columns[38;5;241m=[39m{[38;5;124m'[39m[38;5;124mInfectious_18_23[39m[38;5;124m'[39m: [[38;5;124m'[39m[38;5;124mInfectious_SympT_18_23[39m[38;5;124m'[39m, [38;5;124m'[39m[38;5;124mInfectious_Asymp_18_23[39m[38;5;124m'[39m], [38;5;124m'[39m[38;5;124mSusceptible_18_23[39m[38;5;124m'[39m: [[38;5;124m'[39m[38;5;124mSusceptible_18_23[39m[38;5;124m'[39m]}
[0;32m      5[0m date[38;5;241m=[39m[38;5;124m'[39m[38;5;124miso[39m[38;5;124m'[39m
[1;32m----> 7[0m [43mei[49m[38;5;241;43m.[39;49m[43maggregate_sir[49m[43m([49m
[0;32m      8[0m [43m    [49m[43mclient[49m[38;5;241;43m=[39;49m[43mclient[49m[43m,[49m[43m [49m
[0;32m      9[0m [43m    [49m[43mtable_name[49m[38;5;241;43m=[39;49m[43mtable_name[49m[43m,[49m
[0;32m     10[0m [43m    [49m[43mdestination[49m[38;5;241;43m=[39;49m[43mdestination[49m[43m,[49m
[0;32m     11[0m [43m    [49m[43mgeo_column[49m[38;5;241;43m=[39;49m[43mgeo_column[49m[43m,[49m[43m [49m
[0;32m     12[0m [43m    [49m[43mvalue_columns[49m[38;5;241;43m=[39;49m[43m{[49m[38;5;124;43m'[39;49m[38;5;124;43mInfectious_SympT_18_23[39;49m[38;5;124;43m'[39;49m[43m:[49m[43m [49m[38;5;124;43m'[39;49m[38;5;124;43mInfectious_18_23[39;49m[38;5;124;43m'[39;49m[43m,[49m[43m [49m
[0;32m     13[0m [43m                   [49m[38;5;124;43m'[39;49m[38;5;124;43mInfectious_Asymp_18_23[39;49m[38;5;124;43m'[39;49m[43m:[49m[43m [49m[38;5;124;43m'[39;49m[38;5;124;43mInfectious_18_23[39;49m[38;5;124;43m'[39;49m[43m,[49m[43m [49m
[0;32m     14[0m [43m                   [49m[38;5;124;43m'[39;49m[38;5;124;43mSusceptible_18_23[39;49m[38;5;124;43m'[39;49m[43m:[49m[43m [49m[38;5;124;43m'[39;49m[38;5;124;43mSusceptible_18_23[39;49m[38;5;124;43m'[39;49m[43m}[49m[43m,[49m
[0;32m     15[0m [43m    [49m[43mdate[49m[38;5;241;43m=[39;49m[38;5;124;43m'[39;49m[38;5;124;43miso[39;49m[38;5;124;43m'[39;49m
[0;32m     16[0m [43m)[49m

File [1;32m~\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\epidemic_intelligence\processing.py:265[0m, in [0;36maggregate_sir[1;34m(client, table_name, destination, geo_column, value_columns, run_id_column, date)[0m
[0;32m    249[0m [38;5;28;01mif[39;00m date [38;5;241m==[39m [38;5;124m'[39m[38;5;124miso[39m[38;5;124m'[39m:
[0;32m    250[0m     agg_query [38;5;241m=[39m [38;5;124mf[39m[38;5;124m"""[39m
[0;32m    251[0m [38;5;124m    CREATE OR REPLACE TABLE `[39m[38;5;132;01m{[39;00mdestination[38;5;132;01m}[39;00m[38;5;124m` AS[39m
[0;32m    252[0m [38;5;124m    SELECT[39m
[1;32m   (...)[0m
[0;32m    263[0m [38;5;124m        date[39m
[0;32m    264[0m [38;5;124m    [39m[38;5;124m"""[39m
[1;32m--> 265[0m     [43mexecute[49m[43m([49m[43mclient[49m[43m,[49m[43m [49m[43magg_query[49m[43m)[49m
[0;32m    267[0m [38;5;28;01melif[39;00m date [38;5;241m==[39m [38;5;124m'[39m[38;5;124mepi[39m[38;5;124m'[39m:
[0;32m    268[0m     epiweek_dict [38;5;241m=[39m {}

File [1;32m~\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\epidemic_intelligence\helper\helper.py:10[0m, in [0;36mexecute[1;34m(client, query)[0m
[0;32m      7[0m query_job [38;5;241m=[39m client[38;5;241m.[39mquery(query)
[0;32m      9[0m [38;5;66;03m# Convert result to a Pandas DataFrame[39;00m
[1;32m---> 10[0m result_df [38;5;241m=[39m [43mquery_job[49m[38;5;241;43m.[39;49m[43mresult[49m[43m([49m[43m)[49m[38;5;241m.[39mto_dataframe()
[0;32m     12[0m [38;5;28;01mreturn[39;00m result_df

File [1;32m~\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\google\cloud\bigquery\job\query.py:1681[0m, in [0;36mQueryJob.result[1;34m(self, page_size, max_results, retry, timeout, start_index, job_retry)[0m
[0;32m   1676[0m     remaining_timeout [38;5;241m=[39m [38;5;28;01mNone[39;00m
[0;32m   1678[0m [38;5;28;01mif[39;00m remaining_timeout [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:
[0;32m   1679[0m     [38;5;66;03m# Since is_job_done() calls jobs.getQueryResults, which is a[39;00m
[0;32m   1680[0m     [38;5;66;03m# long-running API, don't delay the next request at all.[39;00m
[1;32m-> 1681[0m     [38;5;28;01mwhile[39;00m [38;5;129;01mnot[39;00m [43mis_job_done[49m[43m([49m[43m)[49m:
[0;32m   1682[0m         [38;5;28;01mpass[39;00m
[0;32m   1683[0m [38;5;28;01melse[39;00m:
[0;32m   1684[0m     [38;5;66;03m# Use a monotonic clock since we don't actually care about[39;00m
[0;32m   1685[0m     [38;5;66;03m# daylight savings or similar, just the elapsed time.[39;00m

File [1;32m~\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\google\api_core\retry\retry_unary.py:293[0m, in [0;36mRetry.__call__.<locals>.retry_wrapped_func[1;34m(*args, **kwargs)[0m
[0;32m    289[0m target [38;5;241m=[39m functools[38;5;241m.[39mpartial(func, [38;5;241m*[39margs, [38;5;241m*[39m[38;5;241m*[39mkwargs)
[0;32m    290[0m sleep_generator [38;5;241m=[39m exponential_sleep_generator(
[0;32m    291[0m     [38;5;28mself[39m[38;5;241m.[39m_initial, [38;5;28mself[39m[38;5;241m.[39m_maximum, multiplier[38;5;241m=[39m[38;5;28mself[39m[38;5;241m.[39m_multiplier
[0;32m    292[0m )
[1;32m--> 293[0m [38;5;28;01mreturn[39;00m [43mretry_target[49m[43m([49m
[0;32m    294[0m [43m    [49m[43mtarget[49m[43m,[49m
[0;32m    295[0m [43m    [49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_predicate[49m[43m,[49m
[0;32m    296[0m [43m    [49m[43msleep_generator[49m[43m,[49m
[0;32m    297[0m [43m    [49m[43mtimeout[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_timeout[49m[43m,[49m
[0;32m    298[0m [43m    [49m[43mon_error[49m[38;5;241;43m=[39;49m[43mon_error[49m[43m,[49m
[0;32m    299[0m [43m[49m[43m)[49m

File [1;32m~\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\google\api_core\retry\retry_unary.py:153[0m, in [0;36mretry_target[1;34m(target, predicate, sleep_generator, timeout, on_error, exception_factory, **kwargs)[0m
[0;32m    149[0m [38;5;66;03m# pylint: disable=broad-except[39;00m
[0;32m    150[0m [38;5;66;03m# This function explicitly must deal with broad exceptions.[39;00m
[0;32m    151[0m [38;5;28;01mexcept[39;00m [38;5;167;01mException[39;00m [38;5;28;01mas[39;00m exc:
[0;32m    152[0m     [38;5;66;03m# defer to shared logic for handling errors[39;00m
[1;32m--> 153[0m     [43m_retry_error_helper[49m[43m([49m
[0;32m    154[0m [43m        [49m[43mexc[49m[43m,[49m
[0;32m    155[0m [43m        [49m[43mdeadline[49m[43m,[49m
[0;32m    156[0m [43m        [49m[43msleep[49m[43m,[49m
[0;32m    157[0m [43m        [49m[43merror_list[49m[43m,[49m
[0;32m    158[0m [43m        [49m[43mpredicate[49m[43m,[49m
[0;32m    159[0m [43m        [49m[43mon_error[49m[43m,[49m
[0;32m    160[0m [43m        [49m[43mexception_factory[49m[43m,[49m
[0;32m    161[0m [43m        [49m[43mtimeout[49m[43m,[49m
[0;32m    162[0m [43m    [49m[43m)[49m
[0;32m    163[0m     [38;5;66;03m# if exception not raised, sleep before next attempt[39;00m
[0;32m    164[0m     time[38;5;241m.[39msleep(sleep)

File [1;32m~\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\google\api_core\retry\retry_base.py:212[0m, in [0;36m_retry_error_helper[1;34m(exc, deadline, next_sleep, error_list, predicate_fn, on_error_fn, exc_factory_fn, original_timeout)[0m
[0;32m    206[0m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m predicate_fn(exc):
[0;32m    207[0m     final_exc, source_exc [38;5;241m=[39m exc_factory_fn(
[0;32m    208[0m         error_list,
[0;32m    209[0m         RetryFailureReason[38;5;241m.[39mNON_RETRYABLE_ERROR,
[0;32m    210[0m         original_timeout,
[0;32m    211[0m     )
[1;32m--> 212[0m     [38;5;28;01mraise[39;00m final_exc [38;5;28;01mfrom[39;00m [38;5;21;01msource_exc[39;00m
[0;32m    213[0m [38;5;28;01mif[39;00m on_error_fn [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[0;32m    214[0m     on_error_fn(exc)

File [1;32m~\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\google\api_core\retry\retry_unary.py:144[0m, in [0;36mretry_target[1;34m(target, predicate, sleep_generator, timeout, on_error, exception_factory, **kwargs)[0m
[0;32m    142[0m [38;5;28;01mfor[39;00m sleep [38;5;129;01min[39;00m sleep_generator:
[0;32m    143[0m     [38;5;28;01mtry[39;00m:
[1;32m--> 144[0m         result [38;5;241m=[39m [43mtarget[49m[43m([49m[43m)[49m
[0;32m    145[0m         [38;5;28;01mif[39;00m inspect[38;5;241m.[39misawaitable(result):
[0;32m    146[0m             warnings[38;5;241m.[39mwarn(_ASYNC_RETRY_WARNING)

File [1;32m~\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\google\cloud\bigquery\job\query.py:1630[0m, in [0;36mQueryJob.result.<locals>.is_job_done[1;34m()[0m
[0;32m   1607[0m [38;5;28;01mif[39;00m job_failed_exception [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[0;32m   1608[0m     [38;5;66;03m# Only try to restart the query job if the job failed for[39;00m
[0;32m   1609[0m     [38;5;66;03m# a retriable reason. For example, don't restart the query[39;00m
[1;32m   (...)[0m
[0;32m   1627[0m     [38;5;66;03m# into an exception that can be processed by the[39;00m
[0;32m   1628[0m     [38;5;66;03m# `job_retry` predicate.[39;00m
[0;32m   1629[0m     restart_query_job [38;5;241m=[39m [38;5;28;01mTrue[39;00m
[1;32m-> 1630[0m     [38;5;28;01mraise[39;00m job_failed_exception
[0;32m   1631[0m [38;5;28;01melse[39;00m:
[0;32m   1632[0m     [38;5;66;03m# Make sure that the _query_results are cached so we[39;00m
[0;32m   1633[0m     [38;5;66;03m# can return a complete RowIterator.[39;00m
[1;32m   (...)[0m
[0;32m   1639[0m     [38;5;66;03m# making any extra API calls if the previous loop[39;00m
[0;32m   1640[0m     [38;5;66;03m# iteration fetched the finished job.[39;00m
[0;32m   1641[0m     [38;5;28mself[39m[38;5;241m.[39m_reload_query_results(
[0;32m   1642[0m         retry[38;5;241m=[39mretry, [38;5;241m*[39m[38;5;241m*[39mreload_query_results_kwargs
[0;32m   1643[0m     )

[1;31mBadRequest[0m: 400 Unrecognized name: I at [6:17]; reason: invalidQuery, location: query, message: Unrecognized name: I at [6:17]

Location: US
Job ID: 75c55aa2-9d2b-440f-b03a-56406452adb4


